[{"result":"success","test":{"name":"Verify Preconditions","groupName":"properties","id":"ID_properties_1","testSourceCode":"function (t){\n t.success(\"Preconditions met, user confirmed.\");\n }","_rawId":1,"result":"\"Preconditions met, user confirmed.\"","oddClass":""}},{"result":"success","test":{"name":"src, is empty","groupName":"properties","id":"ID_properties_100","testSourceCode":"function (t){\n t.assertFalse(!!audioNode.src, \"Attribute 'src' expected to by empty, but has the value: '\" + audioNode.src + \"'\");\n }","_rawId":100,"result":"","oddClass":"odd"}},{"result":"success","test":{"name":"currentSrc, is empty","groupName":"properties","id":"ID_properties_200","testSourceCode":"function (t){\n t.assertFalse(!!audioNode.currentSrc, \"Attribute 'currentSrc' expected to eb empty, but has the value: '\" + audioNode.currentSrc + \"'\");\n }","_rawId":200,"result":"","oddClass":""}},{"result":"success","test":{"name":"src, set it and verify it ends in 'test-audio/loop.wav'","groupName":"properties","id":"ID_properties_300","testSourceCode":"function (t){\n audioNode.src = localAudioFiles.loopWav;\n t.assertTrue(new RegExp(localAudioFiles.loopWav + \"$\").test(audioNode.src));\n }","_rawId":300,"result":"","oddClass":"odd"}},{"result":"success","test":{"name":"currentSrc, ends in 'test-audio/loop.wav'","groupName":"properties","id":"ID_properties_400","testSourceCode":"function (t){\n t.assertTrue(new RegExp(localAudioFiles.loopWav + \"$\").test(audioNode.currentSrc));\n }","_rawId":400,"result":"","oddClass":""}},{"result":"success","test":{"name":"networkState, NETWORK_EMPTY","groupName":"properties","id":"ID_properties_1000","testSourceCode":"function (t){\n var node = document.createElement(\"audio\")\n t.assertEqual(node.NETWORK_EMPTY, node.networkState);\n }","_rawId":1000,"result":"","oddClass":"odd"}},{"result":"not applicable","test":{"name":"networkState, NETWORK_IDLE","groupName":"properties","id":"ID_properties_1100","testSourceCode":"function (t){\n audioNode.load();\n audioNode.addEventListener(\"loadeddata\", function(){\n t.assertEqual(audioNode.NETWORK_IDLE, audioNode.networkState);\n }, false);\n }","_rawId":1100,"oddClass":""}},{"result":"success","test":{"name":"networkState, NETWORK_NO_SOURCE","groupName":"properties","id":"ID_properties_1200","testSourceCode":"function (t){\n var node = document.createElement(\"audio\");\n node.src = \"non-existent-audio-file\" + (+new Date());\n t.assertEqual(node.NETWORK_NO_SOURCE, node.networkState);\n }","_rawId":1200,"result":"","oddClass":"odd"}},{"result":"success","test":{"name":"readyState, HAVE_NOTHING","groupName":"properties","id":"ID_properties_2000","testSourceCode":"function (t){\n var node = document.createElement(\"audio\")\n t.assertEqual(node.HAVE_NOTHING, node.readyState);\n }","_rawId":2000,"result":"","oddClass":""}},{"result":"success","test":{"name":"readyState, HAVE_METADATA","groupName":"properties","id":"ID_properties_2100","testSourceCode":"function (t){\n audioNode.load();\n audioNode._event = [\"loadedmetadata\", function(){\n t.assertTrue(audioNode.readyState >= audioNode.HAVE_METADATA);\n }, false];\n audioNode.addEventListener.apply(audioNode, audioNode._event);\n }","_rawId":2100,"result":"","oddClass":"odd"}},{"result":"success","test":{"name":"readyState, HAVE_CURRENT_DATA","groupName":"properties","id":"ID_properties_2200","testSourceCode":"function (t){\n audioNode.load();\n audioNode._event = [\"loadeddata\", function(){\n t.assertTrue(audioNode.readyState >= audioNode.HAVE_CURRENT_DATA);\n }, false];\n audioNode.addEventListener.apply(audioNode, audioNode._event);\n }","_rawId":2200,"result":"","oddClass":""}},{"result":"success","test":{"name":"readyState, HAVE_FUTURE_DATA","groupName":"properties","id":"ID_properties_2300","testSourceCode":"function (t){\n audioNode.load(); // There is no reset() so reload the file for resetting.\n audioNode.play();\n audioNode._event = [\"playing\", function(){\n t.assertTrue(audioNode.readyState >= audioNode.HAVE_FUTURE_DATA);\n }, false];\n audioNode.addEventListener.apply(audioNode, audioNode._event);\n }","_rawId":2300,"result":"","oddClass":"odd"}},{"result":"success","test":{"name":"readyState, HAVE_ENOUGH_DATA","groupName":"properties","id":"ID_properties_2400","testSourceCode":"function (t){\n audioNode.load(); // There is no reset() so reload the file for resetting.\n audioNode.play();\n audioNode._event = [\"canplaythrough\", function(){\n t.assertTrue(audioNode.readyState >= audioNode.HAVE_ENOUGH_DATA);\n }, false];\n audioNode.addEventListener.apply(audioNode, audioNode._event);\n }","_rawId":2400,"result":"","oddClass":""}}]